# Importing libs
import pandas as pd
import matplotlib.pyplot as plt
import yfinance as yf
import datetime as dt

# Creating variables
corona_data = pd.read_csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
today = dt.date.today()
total_cases_across_countries = []
dates = []

# Check existence of stock
while True:
    try:
        stock_input = input("Please choose a stock and enter its code:\n")
        stock = yf.Ticker(str(stock_input))
        print("\n------------")
        stock.info
        break
    except IndexError:
        print("\nOops, this code does not exist.")
        print("You can check https://de.finance.yahoo.com/ to find the correct code.\n")
        print("------------")

# Get Close data for 2020
stock = yf.Ticker(str(stock_input))
stock_hist = stock.history(period="max")
stock_2020 = stock_hist.loc["2020-01-01":today]
stock_2020_close = (stock_2020["Close"])

# Get Corona cases data for 2020
corona_data_columns = ["date", "total_cases"] 
corona_cases = corona_data[corona_data_columns]
corona_cases.set_index("date", inplace = True)

# Sum cases across countries, safe them and the dates in individual lists
x = dt.date(2020, 1, 1)
while x < today:
    total_cases_across_countries = total_cases_across_countries + [corona_cases.loc[str(x)].sum()["total_cases"]]
    dates = dates + [x]
    x = x + dt.timedelta(days = 1)

# Create DataFrame for Corona data
corona_df = pd.DataFrame()
corona_df["Date"] = dates
corona_df["Total Cases"] = total_cases_across_countries
corona_df.set_index("Date", inplace = True)

# Merge Corona dataframe and Stock dataframe
corona_stock_df = pd.concat([corona_df, stock_2020_close], axis = 1, sort = False)

# Create scatter graph
corona_stock_df["Total Cases"] = corona_stock_df["Total Cases"] / 1000000
plt.scatter(corona_stock_df["Total Cases"], corona_stock_df["Close"])
plt.ylabel("Stock Close Value in â‚¬")
plt.xlabel("Total Corona Cases in Mio.")
plt.title(stock_input)
plt.tick_params(axis ='x', labelsize = "small", rotation =-45) 
plt.show()

# Check correlation
correlation = corona_stock_df.corr(method ='pearson')
print("\nCorrelation of Corona cases and stock value according to Pearson method:\n")
print(correlation)

# Interprete results
print("\n")
if abs(correlation.at["Total Cases", "Close"]) <= 0.3:
    print("There is only a small or no correlation between your stock and the Corona cases.")
elif abs(correlation.at["Total Cases", "Close"]) > 0.3 and abs(correlation.at["Total Cases", "Close"]) <= 0.5:
    print("There is a medium correlation between your stock and the Corona cases.")
elif abs(correlation.at["Total Cases", "Close"]) > 0.5 and abs(correlation.at["Total Cases", "Close"]) != "NaN":
    print("There is a high correlation between your stock and the Corona cases.")
